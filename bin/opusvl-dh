#!perl

use strict;
use warnings;
use v5.20;

use OpusVL::DeploymentHandler;
use Getopt::Long qw(:config gnu_getopt);
use File::ShareDir qw/module_dir/;

my %option = (
    help => sub { pod2usage(verbose => 2) },
);
GetOptions(\%option, 
    'target|t=s', 
    'help|h|?', 
    'connection-info|c=s', 
    'user|u=s', 
    'password|p=s', 
    'force|f',
    'prepare|ddl',
    'verbose|v',
    'deploy|d',
    'dirty',
    'use-moduledir',
);

my $schema = shift;
my $cmd = shift;

($schema and $cmd) or die "Schema or command not provided";

my $despatch = {
    prepare => \&prepare,
    deploy => \&deploy,
    init => \&init
};

exists $despatch->{$cmd} or die "Not a command: $cmd";

eval "require $schema" or die $@;

$despatch->{$cmd}->();

sub schema () {
    state $s = $schema->connect({
        dsn => $option{'connection-info'} // '',
        user => $option{'user'},
        password => $option{'password'},
    });
}

sub dh {
    state $dh = OpusVL::DeploymentHandler->new({
       force_overwrite => $option{force}, 
       schema => schema,
       script_directory => module_dir($schema) . '/sql',
       @_
    })
}

sub init {
    dh(force_overwrite => 1)->install_version_storage;
}
sub prepare {
    dh->prepare_deploy
}
